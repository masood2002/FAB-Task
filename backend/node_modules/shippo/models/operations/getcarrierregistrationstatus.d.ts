import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
export type GetCarrierRegistrationStatusGlobals = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};
/**
 * filter by specific carrier
 */
export declare const Carrier: {
    readonly Ups: "ups";
    readonly Usps: "usps";
    readonly CanadaPost: "canada_post";
};
/**
 * filter by specific carrier
 */
export type Carrier = ClosedEnum<typeof Carrier>;
export type GetCarrierRegistrationStatusRequest = {
    /**
     * filter by specific carrier
     */
    carrier: Carrier;
};
/** @internal */
export declare namespace GetCarrierRegistrationStatusGlobals$ {
    const inboundSchema: z.ZodType<GetCarrierRegistrationStatusGlobals, z.ZodTypeDef, unknown>;
    type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCarrierRegistrationStatusGlobals>;
}
/** @internal */
export declare namespace Carrier$ {
    const inboundSchema: z.ZodNativeEnum<typeof Carrier>;
    const outboundSchema: z.ZodNativeEnum<typeof Carrier>;
}
/** @internal */
export declare namespace GetCarrierRegistrationStatusRequest$ {
    const inboundSchema: z.ZodType<GetCarrierRegistrationStatusRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        carrier: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCarrierRegistrationStatusRequest>;
}
//# sourceMappingURL=getcarrierregistrationstatus.d.ts.map