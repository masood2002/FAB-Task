import * as z from "zod";
export type InitiateOauth2SigninGlobals = {
    /**
     * String used to pick a non-default API version to use
     */
    shippoApiVersion?: string | undefined;
};
export type InitiateOauth2SigninRequest = {
    /**
     * The carrier account ID (UUID) to start a signin process.
     */
    carrierAccountObjectId: string;
    /**
     * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
     */
    redirectUri: string;
    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    state?: string | undefined;
};
export type InitiateOauth2SigninResponse = {
    headers: {
        [k: string]: Array<string>;
    };
};
/** @internal */
export declare namespace InitiateOauth2SigninGlobals$ {
    const inboundSchema: z.ZodType<InitiateOauth2SigninGlobals, z.ZodTypeDef, unknown>;
    type Outbound = {
        "SHIPPO-API-VERSION"?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InitiateOauth2SigninGlobals>;
}
/** @internal */
export declare namespace InitiateOauth2SigninRequest$ {
    const inboundSchema: z.ZodType<InitiateOauth2SigninRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        CarrierAccountObjectId: string;
        redirect_uri: string;
        state?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InitiateOauth2SigninRequest>;
}
/** @internal */
export declare namespace InitiateOauth2SigninResponse$ {
    const inboundSchema: z.ZodType<InitiateOauth2SigninResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        Headers: {
            [k: string]: Array<string>;
        };
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InitiateOauth2SigninResponse>;
}
//# sourceMappingURL=initiateoauth2signin.d.ts.map