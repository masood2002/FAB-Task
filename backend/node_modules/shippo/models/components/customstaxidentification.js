"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomsTaxIdentification$ = exports.CustomsTaxIdentificationType$ = exports.CustomsTaxIdentificationType = void 0;
const z = __importStar(require("zod"));
/**
 * Type of tax identification.
 *
 * @remarks
 * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
 * * `VAT` - Value Added Tax identification number.
 * * `IOSS` - Import One-Stop Shop
 * * `ARN` - Australian Taxation Office Reference Number
 */
exports.CustomsTaxIdentificationType = {
    Ein: "EIN",
    Vat: "VAT",
    Ioss: "IOSS",
    Arn: "ARN",
};
/** @internal */
var CustomsTaxIdentificationType$;
(function (CustomsTaxIdentificationType$) {
    CustomsTaxIdentificationType$.inboundSchema = z.nativeEnum(exports.CustomsTaxIdentificationType);
    CustomsTaxIdentificationType$.outboundSchema = CustomsTaxIdentificationType$.inboundSchema;
})(CustomsTaxIdentificationType$ || (exports.CustomsTaxIdentificationType$ = CustomsTaxIdentificationType$ = {}));
/** @internal */
var CustomsTaxIdentification$;
(function (CustomsTaxIdentification$) {
    CustomsTaxIdentification$.inboundSchema = z.object({
        number: z.string().optional(),
        type: CustomsTaxIdentificationType$.inboundSchema.optional(),
    });
    CustomsTaxIdentification$.outboundSchema = z.object({
        number: z.string().optional(),
        type: CustomsTaxIdentificationType$.outboundSchema.optional(),
    });
})(CustomsTaxIdentification$ || (exports.CustomsTaxIdentification$ = CustomsTaxIdentification$ = {}));
//# sourceMappingURL=customstaxidentification.js.map