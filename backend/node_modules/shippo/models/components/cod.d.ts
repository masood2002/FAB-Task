import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
/**
 * Secured funds include money orders, certified cheques and others (see
 *
 * @remarks
 * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
 * If no payment_method inputted the value defaults to "ANY".)
 */
export declare const PaymentMethod: {
    readonly SecuredFunds: "SECURED_FUNDS";
    readonly Cash: "CASH";
    readonly Any: "ANY";
};
/**
 * Secured funds include money orders, certified cheques and others (see
 *
 * @remarks
 * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
 * If no payment_method inputted the value defaults to "ANY".)
 */
export type PaymentMethod = ClosedEnum<typeof PaymentMethod>;
/**
 * Specify collection on delivery details (UPS only).
 */
export type Cod = {
    /**
     * Amount to be collected.
     */
    amount?: string | undefined;
    /**
     * Currency for the amount to be collected. Currently only USD is supported for UPS.
     */
    currency?: string | undefined;
    /**
     * Secured funds include money orders, certified cheques and others (see
     *
     * @remarks
     * <a href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a> for details).
     * If no payment_method inputted the value defaults to "ANY".)
     */
    paymentMethod?: PaymentMethod | undefined;
};
/** @internal */
export declare namespace PaymentMethod$ {
    const inboundSchema: z.ZodNativeEnum<typeof PaymentMethod>;
    const outboundSchema: z.ZodNativeEnum<typeof PaymentMethod>;
}
/** @internal */
export declare namespace Cod$ {
    const inboundSchema: z.ZodType<Cod, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount?: string | undefined;
        currency?: string | undefined;
        payment_method?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Cod>;
}
//# sourceMappingURL=cod.d.ts.map