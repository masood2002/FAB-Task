import { Transaction, Transaction$ } from "./transaction.js";
import { WebhookEventTypeEnum } from "./webhookeventtypeenum.js";
import * as z from "zod";
/**
 * Content of the webhook posted to the external URL
 */
export type WebhookPayloadTransaction = {
    /**
     * Type of event that triggered the webhook.
     */
    event?: WebhookEventTypeEnum | undefined;
    /**
     * Determines whether the webhook is a test webhook or not.
     */
    test?: boolean | undefined;
    data?: Transaction | undefined;
};
/** @internal */
export declare namespace WebhookPayloadTransaction$ {
    const inboundSchema: z.ZodType<WebhookPayloadTransaction, z.ZodTypeDef, unknown>;
    type Outbound = {
        event?: string | undefined;
        test?: boolean | undefined;
        data?: Transaction$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookPayloadTransaction>;
}
//# sourceMappingURL=webhookpayloadtransaction.d.ts.map