"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Track$ = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const servicelevelwithparent_js_1 = require("./servicelevelwithparent.js");
const trackingstatus_js_1 = require("./trackingstatus.js");
const trackingstatuslocationbase_js_1 = require("./trackingstatuslocationbase.js");
const z = __importStar(require("zod"));
/** @internal */
var Track$;
(function (Track$) {
    Track$.inboundSchema = z
        .object({
        address_from: trackingstatuslocationbase_js_1.TrackingStatusLocationBase$.inboundSchema.optional(),
        address_to: trackingstatuslocationbase_js_1.TrackingStatusLocationBase$.inboundSchema.optional(),
        carrier: z.string(),
        eta: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        messages: z.array(z.string()),
        metadata: z.string().optional(),
        original_eta: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        servicelevel: servicelevelwithparent_js_1.ServiceLevelWithParent$.inboundSchema.optional(),
        tracking_history: z.array(trackingstatus_js_1.TrackingStatus$.inboundSchema),
        tracking_number: z.string(),
        tracking_status: trackingstatus_js_1.TrackingStatus$.inboundSchema.optional(),
        transaction: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            address_from: "addressFrom",
            address_to: "addressTo",
            original_eta: "originalEta",
            tracking_history: "trackingHistory",
            tracking_number: "trackingNumber",
            tracking_status: "trackingStatus",
        });
    });
    Track$.outboundSchema = z
        .object({
        addressFrom: trackingstatuslocationbase_js_1.TrackingStatusLocationBase$.outboundSchema.optional(),
        addressTo: trackingstatuslocationbase_js_1.TrackingStatusLocationBase$.outboundSchema.optional(),
        carrier: z.string(),
        eta: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        messages: z.array(z.string()),
        metadata: z.string().optional(),
        originalEta: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        servicelevel: servicelevelwithparent_js_1.ServiceLevelWithParent$.outboundSchema.optional(),
        trackingHistory: z.array(trackingstatus_js_1.TrackingStatus$.outboundSchema),
        trackingNumber: z.string(),
        trackingStatus: trackingstatus_js_1.TrackingStatus$.outboundSchema.optional(),
        transaction: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            addressFrom: "address_from",
            addressTo: "address_to",
            originalEta: "original_eta",
            trackingHistory: "tracking_history",
            trackingNumber: "tracking_number",
            trackingStatus: "tracking_status",
        });
    });
})(Track$ || (exports.Track$ = Track$ = {}));
//# sourceMappingURL=track.js.map