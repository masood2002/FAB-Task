import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
/**
 * Mandatory for Fedex only. License type of the recipient of the Alcohol Package.
 */
export declare const RecipientType: {
    readonly Licensee: "licensee";
    readonly Consumer: "consumer";
};
/**
 * Mandatory for Fedex only. License type of the recipient of the Alcohol Package.
 */
export type RecipientType = ClosedEnum<typeof RecipientType>;
/**
 * Indicates that a shipment contains Alcohol (Fedex and UPS only).
 */
export type Alcohol = {
    /**
     * Mandatory for Fedex and UPS. Specifies that the package contains Alcohol.
     */
    containsAlcohol?: boolean | undefined;
    /**
     * Mandatory for Fedex only. License type of the recipient of the Alcohol Package.
     */
    recipientType?: RecipientType | undefined;
};
/** @internal */
export declare namespace RecipientType$ {
    const inboundSchema: z.ZodNativeEnum<typeof RecipientType>;
    const outboundSchema: z.ZodNativeEnum<typeof RecipientType>;
}
/** @internal */
export declare namespace Alcohol$ {
    const inboundSchema: z.ZodType<Alcohol, z.ZodTypeDef, unknown>;
    type Outbound = {
        contains_alcohol?: boolean | undefined;
        recipient_type?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Alcohol>;
}
//# sourceMappingURL=alcohol.d.ts.map