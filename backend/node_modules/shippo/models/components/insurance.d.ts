import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
/**
 * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set `provider` to `FEDEX`, `UPS`, or `ONTRAC`.
 */
export declare const Provider: {
    readonly Fedex: "FEDEX";
    readonly Ups: "UPS";
    readonly Ontrac: "ONTRAC";
};
/**
 * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set `provider` to `FEDEX`, `UPS`, or `ONTRAC`.
 */
export type Provider = ClosedEnum<typeof Provider>;
/**
 * To add 3rd party insurance powered by <a href="https://docs.goshippo.com/docs/shipments/shippinginsurance/">XCover</a>,
 *
 * @remarks
 * specify <br> `amount`, `content`, and `currency`. <br> Alternatively, you can choose carrier provided insurance
 * by additionally specifying `provider` (UPS, FedEx and OnTrac only). <br><br> If you do not want to add insurance
 * to your shipment, do not set these parameters.
 */
export type Insurance = {
    /**
     * Declared value of the goods you want to insure.
     */
    amount?: string | undefined;
    /**
     * Description of package content.
     */
    content?: string | undefined;
    /**
     * Currency for the amount value.
     *
     * @remarks
     * Currently only USD is supported for FedEx and UPS.
     */
    currency?: string | undefined;
    /**
     * To have insurance cover provided by a carrier directly instead of Shippo's provider (XCover), set `provider` to `FEDEX`, `UPS`, or `ONTRAC`.
     */
    provider?: Provider | undefined;
};
/** @internal */
export declare namespace Provider$ {
    const inboundSchema: z.ZodNativeEnum<typeof Provider>;
    const outboundSchema: z.ZodNativeEnum<typeof Provider>;
}
/** @internal */
export declare namespace Insurance$ {
    const inboundSchema: z.ZodType<Insurance, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount?: string | undefined;
        content?: string | undefined;
        currency?: string | undefined;
        provider?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Insurance>;
}
//# sourceMappingURL=insurance.d.ts.map