"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchShipment$ = exports.Status$ = exports.Status = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const z = __importStar(require("zod"));
/**
 * `INVALID` batch shipments cannot be purchased and will have to be removed, fixed, and added to the batch again.<br>
 *
 * @remarks
 * `VALID` batch shipments can be purchased. <br>
 * Batch shipments with the status `TRANSACTION_FAILED` were not able to be purchased and the error will be displayed on the message field<br>
 * `INCOMPLETE` batch shipments have an issue with the Address and will need to be removed, fixed, and added to the batch again.
 */
exports.Status = {
    Invalid: "INVALID",
    Valid: "VALID",
    Incomplete: "INCOMPLETE",
    TransactionFailed: "TRANSACTION_FAILED",
};
/** @internal */
var Status$;
(function (Status$) {
    Status$.inboundSchema = z.nativeEnum(exports.Status);
    Status$.outboundSchema = Status$.inboundSchema;
})(Status$ || (exports.Status$ = Status$ = {}));
/** @internal */
var BatchShipment$;
(function (BatchShipment$) {
    BatchShipment$.inboundSchema = z
        .object({
        carrier_account: z.string().optional(),
        metadata: z.string().optional(),
        servicelevel_token: z.string().optional(),
        messages: z.array(z.any()).optional(),
        object_id: z.string(),
        shipment: z.string(),
        status: Status$.inboundSchema,
        transaction: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            carrier_account: "carrierAccount",
            servicelevel_token: "servicelevelToken",
            object_id: "objectId",
        });
    });
    BatchShipment$.outboundSchema = z
        .object({
        carrierAccount: z.string().optional(),
        metadata: z.string().optional(),
        servicelevelToken: z.string().optional(),
        messages: z.array(z.any()).optional(),
        objectId: z.string(),
        shipment: z.string(),
        status: Status$.outboundSchema,
        transaction: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            carrierAccount: "carrier_account",
            servicelevelToken: "servicelevel_token",
            objectId: "object_id",
        });
    });
})(BatchShipment$ || (exports.BatchShipment$ = BatchShipment$ = {}));
//# sourceMappingURL=batchshipment.js.map