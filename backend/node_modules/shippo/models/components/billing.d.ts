import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
/**
 * Party to be billed. (Leave blank for DHL Germany.)
 */
export declare const Type: {
    readonly Sender: "SENDER";
    readonly Recipient: "RECIPIENT";
    readonly ThirdParty: "THIRD_PARTY";
    readonly ThirdPartyConsignee: "THIRD_PARTY_CONSIGNEE";
    readonly Collect: "COLLECT";
};
/**
 * Party to be billed. (Leave blank for DHL Germany.)
 */
export type Type = ClosedEnum<typeof Type>;
/**
 * Specify billing details (UPS, FedEx, and DHL Germany only).
 */
export type Billing = {
    /**
     * Account number to be billed. (For DHL Germany, leave this field blank.)
     */
    account?: string | undefined;
    /**
     * Country iso2 code of account number to be billed (required for UPS third party billing only).
     */
    country?: string | undefined;
    /**
     * 2 digit code used to override your default participation code associated with your DHL Germany account.
     */
    participationCode?: string | undefined;
    /**
     * Party to be billed. (Leave blank for DHL Germany.)
     */
    type?: Type | undefined;
    /**
     * ZIP code of account number to be billed (required for UPS if there is a zip on the billing account).
     */
    zip?: string | undefined;
};
/** @internal */
export declare namespace Type$ {
    const inboundSchema: z.ZodNativeEnum<typeof Type>;
    const outboundSchema: z.ZodNativeEnum<typeof Type>;
}
/** @internal */
export declare namespace Billing$ {
    const inboundSchema: z.ZodType<Billing, z.ZodTypeDef, unknown>;
    type Outbound = {
        account?: string | undefined;
        country?: string | undefined;
        participation_code?: string | undefined;
        type?: string | undefined;
        zip?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Billing>;
}
//# sourceMappingURL=billing.d.ts.map