"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserParcelTemplate$ = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const carrierparceltemplate_js_1 = require("./carrierparceltemplate.js");
const distanceunitenum_js_1 = require("./distanceunitenum.js");
const weightunitenum_js_1 = require("./weightunitenum.js");
const z = __importStar(require("zod"));
/** @internal */
var UserParcelTemplate$;
(function (UserParcelTemplate$) {
    UserParcelTemplate$.inboundSchema = z
        .object({
        distance_unit: distanceunitenum_js_1.DistanceUnitEnum$.inboundSchema.optional(),
        height: z.string().optional(),
        length: z.string().optional(),
        name: z.string().optional(),
        weight: z.string().optional(),
        weight_unit: weightunitenum_js_1.WeightUnitEnum$.inboundSchema.optional(),
        width: z.string().optional(),
        object_created: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        object_id: z.string().optional(),
        object_owner: z.string().optional(),
        object_updated: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        template: carrierparceltemplate_js_1.CarrierParcelTemplate$.inboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            distance_unit: "distanceUnit",
            weight_unit: "weightUnit",
            object_created: "objectCreated",
            object_id: "objectId",
            object_owner: "objectOwner",
            object_updated: "objectUpdated",
        });
    });
    UserParcelTemplate$.outboundSchema = z
        .object({
        distanceUnit: distanceunitenum_js_1.DistanceUnitEnum$.outboundSchema.optional(),
        height: z.string().optional(),
        length: z.string().optional(),
        name: z.string().optional(),
        weight: z.string().optional(),
        weightUnit: weightunitenum_js_1.WeightUnitEnum$.outboundSchema.optional(),
        width: z.string().optional(),
        objectCreated: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        objectId: z.string().optional(),
        objectOwner: z.string().optional(),
        objectUpdated: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        template: carrierparceltemplate_js_1.CarrierParcelTemplate$.outboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            distanceUnit: "distance_unit",
            weightUnit: "weight_unit",
            objectCreated: "object_created",
            objectId: "object_id",
            objectOwner: "object_owner",
            objectUpdated: "object_updated",
        });
    });
})(UserParcelTemplate$ || (exports.UserParcelTemplate$ = UserParcelTemplate$ = {}));
//# sourceMappingURL=userparceltemplate.js.map