"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectExistingOwnAccountRequest$ = exports.ConnectExistingOwnAccountRequestParameters$ = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const fedexconnectexistingownaccountparameters_js_1 = require("./fedexconnectexistingownaccountparameters.js");
const upsconnectexistingownaccountparameters_js_1 = require("./upsconnectexistingownaccountparameters.js");
const z = __importStar(require("zod"));
/** @internal */
var ConnectExistingOwnAccountRequestParameters$;
(function (ConnectExistingOwnAccountRequestParameters$) {
    ConnectExistingOwnAccountRequestParameters$.inboundSchema = z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$.inboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$.inboundSchema,
        z.record(z.any()),
    ]);
    ConnectExistingOwnAccountRequestParameters$.outboundSchema = z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$.outboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$.outboundSchema,
        z.record(z.any()),
    ]);
})(ConnectExistingOwnAccountRequestParameters$ || (exports.ConnectExistingOwnAccountRequestParameters$ = ConnectExistingOwnAccountRequestParameters$ = {}));
/** @internal */
var ConnectExistingOwnAccountRequest$;
(function (ConnectExistingOwnAccountRequest$) {
    ConnectExistingOwnAccountRequest$.inboundSchema = z
        .object({
        account_id: z.string(),
        active: z.boolean().optional(),
        carrier: z.string(),
        metadata: z.string().optional(),
        parameters: z.union([
            fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$.inboundSchema,
            upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$.inboundSchema,
            z.record(z.any()),
        ]),
        test: z.boolean().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            account_id: "accountId",
        });
    });
    ConnectExistingOwnAccountRequest$.outboundSchema = z
        .object({
        accountId: z.string(),
        active: z.boolean().optional(),
        carrier: z.string(),
        metadata: z.string().optional(),
        parameters: z.union([
            fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$.outboundSchema,
            upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$.outboundSchema,
            z.record(z.any()),
        ]),
        test: z.boolean().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            accountId: "account_id",
        });
    });
})(ConnectExistingOwnAccountRequest$ || (exports.ConnectExistingOwnAccountRequest$ = ConnectExistingOwnAccountRequest$ = {}));
//# sourceMappingURL=connectexistingownaccountrequest.js.map