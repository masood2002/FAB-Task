import { AddressCreateRequest, AddressCreateRequest$ } from "./addresscreaterequest.js";
import { CustomsDeclarationCreateRequest, CustomsDeclarationCreateRequest$ } from "./customsdeclarationcreaterequest.js";
import { ParcelCreateFromTemplateRequest, ParcelCreateFromTemplateRequest$ } from "./parcelcreatefromtemplaterequest.js";
import { ParcelCreateRequest, ParcelCreateRequest$ } from "./parcelcreaterequest.js";
import { ShipmentExtra, ShipmentExtra$ } from "./shipmentextra.js";
import * as z from "zod";
export type AddressFrom = AddressCreateRequest | string;
export type AddressReturn = AddressCreateRequest | string;
export type AddressTo = AddressCreateRequest | string;
export type ShipmentCreateRequestCustomsDeclaration = CustomsDeclarationCreateRequest | string;
export type Parcels = ParcelCreateFromTemplateRequest | ParcelCreateRequest | string;
export type ShipmentCreateRequest = {
    /**
     * An object holding optional extra services to be requested.
     */
    extra?: ShipmentExtra | undefined;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * Date the shipment will be tendered to the carrier. Must be in the format `2014-01-18T00:35:03.463Z`.
     *
     * @remarks
     * Defaults to current date and time if no value is provided. Please note that some carriers require this value to
     * be in the future, on a working day, or similar.
     */
    shipmentDate?: string | undefined;
    addressFrom: AddressCreateRequest | string;
    addressReturn?: AddressCreateRequest | string | undefined;
    addressTo: AddressCreateRequest | string;
    customsDeclaration?: CustomsDeclarationCreateRequest | string | undefined;
    async?: boolean | undefined;
    /**
     * List of <a href="#tag/Carrier-Accounts/">Carrier Accounts</a> `object_id`s used to filter
     *
     * @remarks
     * the returned rates.  If set, only rates from these carriers will be returned.
     */
    carrierAccounts?: Array<string> | undefined;
    parcels: Array<ParcelCreateFromTemplateRequest | ParcelCreateRequest | string>;
};
/** @internal */
export declare namespace AddressFrom$ {
    const inboundSchema: z.ZodType<AddressFrom, z.ZodTypeDef, unknown>;
    type Outbound = AddressCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressFrom>;
}
/** @internal */
export declare namespace AddressReturn$ {
    const inboundSchema: z.ZodType<AddressReturn, z.ZodTypeDef, unknown>;
    type Outbound = AddressCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressReturn>;
}
/** @internal */
export declare namespace AddressTo$ {
    const inboundSchema: z.ZodType<AddressTo, z.ZodTypeDef, unknown>;
    type Outbound = AddressCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressTo>;
}
/** @internal */
export declare namespace ShipmentCreateRequestCustomsDeclaration$ {
    const inboundSchema: z.ZodType<ShipmentCreateRequestCustomsDeclaration, z.ZodTypeDef, unknown>;
    type Outbound = CustomsDeclarationCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShipmentCreateRequestCustomsDeclaration>;
}
/** @internal */
export declare namespace Parcels$ {
    const inboundSchema: z.ZodType<Parcels, z.ZodTypeDef, unknown>;
    type Outbound = ParcelCreateFromTemplateRequest$.Outbound | ParcelCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Parcels>;
}
/** @internal */
export declare namespace ShipmentCreateRequest$ {
    const inboundSchema: z.ZodType<ShipmentCreateRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        extra?: ShipmentExtra$.Outbound | undefined;
        metadata?: string | undefined;
        shipment_date?: string | undefined;
        address_from: AddressCreateRequest$.Outbound | string;
        address_return?: AddressCreateRequest$.Outbound | string | undefined;
        address_to: AddressCreateRequest$.Outbound | string;
        customs_declaration?: CustomsDeclarationCreateRequest$.Outbound | string | undefined;
        async?: boolean | undefined;
        carrier_accounts?: Array<string> | undefined;
        parcels: Array<ParcelCreateFromTemplateRequest$.Outbound | ParcelCreateRequest$.Outbound | string>;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShipmentCreateRequest>;
}
//# sourceMappingURL=shipmentcreaterequest.d.ts.map