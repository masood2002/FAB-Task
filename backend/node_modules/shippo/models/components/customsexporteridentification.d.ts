import { CustomsTaxIdentification, CustomsTaxIdentification$ } from "./customstaxidentification.js";
import * as z from "zod";
/**
 * Additional exporter identification that may be required to ship in certain countries
 */
export type CustomsExporterIdentification = {
    /**
     * Economic Operators' Registration and Identification (EORI) number. Must start with a 2 character
     *
     * @remarks
     * country code followed by a 6-17 character alphanumeric identifier (e.g. PL1234567890ABCDE).
     * <a href="https://ec.europa.eu/taxation_customs/business/customs-procedures/general-overview/economic-operators-registration-identification-number-eori_en">More information on EORI.</a>
     */
    eoriNumber?: string | undefined;
    /**
     * Tax identification that may be required to ship in certain countries. Typically used to assess duties on
     *
     * @remarks
     * goods that are crossing a border.
     */
    taxId?: CustomsTaxIdentification | undefined;
};
/** @internal */
export declare namespace CustomsExporterIdentification$ {
    const inboundSchema: z.ZodType<CustomsExporterIdentification, z.ZodTypeDef, unknown>;
    type Outbound = {
        eori_number?: string | undefined;
        tax_id?: CustomsTaxIdentification$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomsExporterIdentification>;
}
//# sourceMappingURL=customsexporteridentification.d.ts.map