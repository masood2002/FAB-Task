"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rate$ = exports.Attributes$ = exports.Attributes = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const responsemessage_js_1 = require("./responsemessage.js");
const servicelevelwithparent_js_1 = require("./servicelevelwithparent.js");
const z = __importStar(require("zod"));
exports.Attributes = {
    Bestvalue: "BESTVALUE",
    Cheapest: "CHEAPEST",
    Fastest: "FASTEST",
};
/** @internal */
var Attributes$;
(function (Attributes$) {
    Attributes$.inboundSchema = z.nativeEnum(exports.Attributes);
    Attributes$.outboundSchema = Attributes$.inboundSchema;
})(Attributes$ || (exports.Attributes$ = Attributes$ = {}));
/** @internal */
var Rate$;
(function (Rate$) {
    Rate$.inboundSchema = z
        .object({
        amount: z.string(),
        amount_local: z.string(),
        currency: z.string(),
        currency_local: z.string(),
        arrives_by: z.string().optional(),
        attributes: z.array(Attributes$.inboundSchema),
        carrier_account: z.string(),
        duration_terms: z.string().optional(),
        estimated_days: z.number().int().optional(),
        included_insurance_price: z.string().optional(),
        messages: z.array(responsemessage_js_1.ResponseMessage$.inboundSchema).optional(),
        object_created: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        object_id: z.string(),
        object_owner: z.string(),
        provider: z.string(),
        provider_image_75: z.string().optional(),
        provider_image_200: z.string().optional(),
        servicelevel: servicelevelwithparent_js_1.ServiceLevelWithParent$.inboundSchema,
        shipment: z.string(),
        test: z.boolean().optional(),
        zone: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            amount_local: "amountLocal",
            currency_local: "currencyLocal",
            arrives_by: "arrivesBy",
            carrier_account: "carrierAccount",
            duration_terms: "durationTerms",
            estimated_days: "estimatedDays",
            included_insurance_price: "includedInsurancePrice",
            object_created: "objectCreated",
            object_id: "objectId",
            object_owner: "objectOwner",
            provider_image_75: "providerImage75",
            provider_image_200: "providerImage200",
        });
    });
    Rate$.outboundSchema = z
        .object({
        amount: z.string(),
        amountLocal: z.string(),
        currency: z.string(),
        currencyLocal: z.string(),
        arrivesBy: z.string().optional(),
        attributes: z.array(Attributes$.outboundSchema),
        carrierAccount: z.string(),
        durationTerms: z.string().optional(),
        estimatedDays: z.number().int().optional(),
        includedInsurancePrice: z.string().optional(),
        messages: z.array(responsemessage_js_1.ResponseMessage$.outboundSchema).optional(),
        objectCreated: z.date().transform((v) => v.toISOString()),
        objectId: z.string(),
        objectOwner: z.string(),
        provider: z.string(),
        providerImage75: z.string().optional(),
        providerImage200: z.string().optional(),
        servicelevel: servicelevelwithparent_js_1.ServiceLevelWithParent$.outboundSchema,
        shipment: z.string(),
        test: z.boolean().optional(),
        zone: z.string().optional(),
    })
        .transform((v) => {
        return (0, primitives_js_1.remap)(v, {
            amountLocal: "amount_local",
            currencyLocal: "currency_local",
            arrivesBy: "arrives_by",
            carrierAccount: "carrier_account",
            durationTerms: "duration_terms",
            estimatedDays: "estimated_days",
            includedInsurancePrice: "included_insurance_price",
            objectCreated: "object_created",
            objectId: "object_id",
            objectOwner: "object_owner",
            providerImage75: "provider_image_75",
            providerImage200: "provider_image_200",
        });
    });
})(Rate$ || (exports.Rate$ = Rate$ = {}));
//# sourceMappingURL=rate.js.map