import { FedExConnectExistingOwnAccountParameters, FedExConnectExistingOwnAccountParameters$ } from "./fedexconnectexistingownaccountparameters.js";
import { UPSConnectExistingOwnAccountParameters, UPSConnectExistingOwnAccountParameters$ } from "./upsconnectexistingownaccountparameters.js";
import * as z from "zod";
export type ConnectExistingOwnAccountRequestParameters = FedExConnectExistingOwnAccountParameters | UPSConnectExistingOwnAccountParameters | {
    [k: string]: any;
};
export type ConnectExistingOwnAccountRequest = {
    accountId: string;
    active?: boolean | undefined;
    carrier: string;
    metadata?: string | undefined;
    parameters: FedExConnectExistingOwnAccountParameters | UPSConnectExistingOwnAccountParameters | {
        [k: string]: any;
    };
    test?: boolean | undefined;
};
/** @internal */
export declare namespace ConnectExistingOwnAccountRequestParameters$ {
    const inboundSchema: z.ZodType<ConnectExistingOwnAccountRequestParameters, z.ZodTypeDef, unknown>;
    type Outbound = FedExConnectExistingOwnAccountParameters$.Outbound | UPSConnectExistingOwnAccountParameters$.Outbound | {
        [k: string]: any;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectExistingOwnAccountRequestParameters>;
}
/** @internal */
export declare namespace ConnectExistingOwnAccountRequest$ {
    const inboundSchema: z.ZodType<ConnectExistingOwnAccountRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        account_id: string;
        active?: boolean | undefined;
        carrier: string;
        metadata?: string | undefined;
        parameters: FedExConnectExistingOwnAccountParameters$.Outbound | UPSConnectExistingOwnAccountParameters$.Outbound | {
            [k: string]: any;
        };
        test?: boolean | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectExistingOwnAccountRequest>;
}
//# sourceMappingURL=connectexistingownaccountrequest.d.ts.map