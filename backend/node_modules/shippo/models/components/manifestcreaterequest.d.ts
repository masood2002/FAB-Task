import { AddressCreateRequest, AddressCreateRequest$ } from "./addresscreaterequest.js";
import * as z from "zod";
export type ManifestCreateRequestAddressFrom = AddressCreateRequest | string;
export type ManifestCreateRequest = {
    /**
     * ID of carrier account
     */
    carrierAccount: string;
    /**
     * All shipments to be submitted on this day will be closed out.
     *
     * @remarks
     * Must be in the format `2014-01-18T00:35:03.463Z` (ISO 8601 date).
     */
    shipmentDate: string;
    /**
     * IDs transactions to use. If you set this to null or not send this parameter,
     *
     * @remarks
     * Shippo will automatically assign all applicable transactions.
     */
    transactions?: Array<string> | undefined;
    addressFrom: AddressCreateRequest | string;
    async?: boolean | undefined;
};
/** @internal */
export declare namespace ManifestCreateRequestAddressFrom$ {
    const inboundSchema: z.ZodType<ManifestCreateRequestAddressFrom, z.ZodTypeDef, unknown>;
    type Outbound = AddressCreateRequest$.Outbound | string;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ManifestCreateRequestAddressFrom>;
}
/** @internal */
export declare namespace ManifestCreateRequest$ {
    const inboundSchema: z.ZodType<ManifestCreateRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        carrier_account: string;
        shipment_date: string;
        transactions?: Array<string> | undefined;
        address_from: AddressCreateRequest$.Outbound | string;
        async?: boolean | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ManifestCreateRequest>;
}
//# sourceMappingURL=manifestcreaterequest.d.ts.map